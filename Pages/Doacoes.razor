@page "/doacoes"
@using BlazorInputMask;
@inject IJSRuntime JS

@using doe_mais_ads.Models;
@using doe_mais_ads.Service;

@using System.Timers;
@implements IDisposable;

@inject EntidadeService entidadeService;
@inject CampanhaService campanhaService;

<PageTitle>Doações</PageTitle>

<div class="flex flex-col gap-4 h-full">
    <div class="w-full bg-zinc-100 p-4 rounded-lg flex flex-col gap-3">
        <span class="text-2xl font-bold">Doações</span>
        <span class="text-sm font-normal text-gray-500">
            Visualize, cadastre, edite e exclua doações
        </span>
    </div>


    <div class="flex flex-col gap-6">
        <div class="flex flex-row gap-4 h-24">
            <button data-modal-target="new-doacao-modal" data-modal-toggle="new-doacao-modal"
                class="relative items-center drop-shadow-md justify-center p-1 flex overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 group-hover:from-green-400 group-hover:to-blue-600 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800">
                <span
                    class="relative w-60 p-4 h-full flex items-center justify-center transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md group-hover:bg-opacity-0">
                    Nova Doação
                </span>
            </button>

            <div
                class="relative items-center w-full drop-shadow-md justify-center p-1 flex overflow-hidden text-sm font-medium text-gray-900 rounded-lg group bg-gradient-to-br from-green-400 to-blue-600 dark:text-white focus:ring-4 focus:outline-none focus:ring-green-200 dark:focus:ring-green-800">
                <div
                    class="relative w-full p-2 h-full flex items-center justify-center transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-md">
                    <div class="flex flex-row gap-2 h-full w-full">
                        <div class="w-full">
                            <label for="first_name"
                                class="block mb-1 text-sm font-medium text-gray-900 dark:text-white">Pesquisar por
                                nome</label>
                            <input type="text" id="first_name" @bind="inputSearch" @bind:event="oninput"
                                @onkeyup="@ResetTimer"
                                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                placeholder="Amanda Alves" required />
                        </div>

                        <form class="w-1/2">
                            <label for="select-order"
                                class="block mb-1 text-sm font-medium text-gray-900 dark:text-white">Ordenar por
                            </label>
                            <select id="select-order" @onchange="filterByOrder"
                                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                                <option selected>Selecione...</option>
                                <option value="DATA_CRES">Data registro (crescente)</option>
                                <option value="DATA_DECR">Data registro (decrescente)</option>
                                <option value="NOME_CRES">Nome (crescente)</option>
                                <option value="NOME_DECR">Nome (decrescente)</option>
                            </select>
                        </form>
                        <form class="w-1/2">
                            <label for="select-tipo-pessoa"
                                class="block mb-1 text-sm font-medium text-gray-900 dark:text-white">Tipo
                            </label>
                            <select id="select-tipo-pessoa" @onchange="filterByType"
                                class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                                <option value="CLEAR" selected>Selecione...</option>
                                <option value="PF">Pessoa física</option>
                                <option value="PJ">Pessoa jurídica</option>
                            </select>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="flex flex-col min-h-80 flex-wrap justify-center items-center gap-4 pb-20">
            @if (entities.Count == 0)
            {
                <div class="h-40 flex w-full justify-center items-center text-start">
                    <div class="text-base font-semibold text-gray-500">
                        Nenhuma entidade encontrada
                    </div>
                </div>
            }
            else
            {
                @if (loadingEntities)
                {
                    <div role="status">
                        <svg aria-hidden="true"
                            class="inline w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-green-500"
                            viewBox="0 0 100 101" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                                fill="currentColor" />
                            <path
                                d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                                fill="currentFill" />
                        </svg>
                        <span class="sr-only">Carregando entidades...</span>
                    </div>
                }
                else
                {
                    foreach (var item in entities)
                    {
                        <div class="flex flex-col gap-8 w-full bg-zinc-100 p-3 rounded-lg">
                            <div class="flex flex-row gap-8 h-full p-3 flex-wrap">
                                <div class="text-start flex gap-1 flex-col">
                                    <div class="text-base font-normal text-gray-600">Tipo</div>
                                    <div class="py-1 px-3 group bg-gradient-to-br from-green-400 to-blue-600 rounded-md text-white">
                                        @if (item.IsPessoaFisica)
                                        {
                                            <span class="text-sm font-semibold">Pessoa Física</span>
                                        }
                                        else
                                        {
                                            <span class="text-sm font-semibold">Pessoa Jurídica</span>
                                        }
                                    </div>
                                </div>

                                @if (item.IsPessoaFisica)
                                {
                                    <div class="text-start flex gap-1 flex-col">
                                        <div class="text-base font-normal text-gray-600">Nome</div>
                                        <div class="text-base font-semibold py-1 w-56">@item.Nome</div>
                                    </div>
                                    <div class="text-start flex gap-1 flex-col">
                                        <div class="text-base font-normal text-gray-600">CPF</div>
                                        <div class="text-base font-semibold py-1">@item.Cpf</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-start flex gap-1 flex-col">
                                        <div class="text-base font-normal text-gray-600">Nome Fantasia</div>
                                        <div class="text-base font-semibold py-1 line-clamp-1 w-56">
                                            @item.NomeFantasia
                                        </div>
                                    </div>

                                    <div class="text-start flex gap-1 flex-col">
                                        <div class="text-base font-normal text-gray-600">CNPJ</div>
                                        <div class="text-base font-semibold py-1">@item.Cnpj</div>
                                    </div>
                                }

                                <div class="text-start flex gap-1 flex-col">
                                    <div class="text-base font-normal text-gray-600">Email</div>
                                    <div class="text-base font-semibold py-1">@item.Email</div>
                                </div>

                                <div class="text-start flex gap-1 flex-col">
                                    <div class="text-base font-normal text-gray-600">Telefone</div>
                                    <div class="text-base font-semibold py-1">@item.Telefone</div>
                                </div>
                            </div>

                            <div class="flex w-full justify-end">
                                <div class="bg-white rounded-md p-3 flex gap-6 flex-row justify-center items-center">
                                    <button @onclick="() => openModalUpdateDoacoes(item)" data-modal-target="new-doacao-modal"
                                        data-modal-toggle="new-doacao-modal"
                                        class="relative items-center drop-shadow-md justify-center p-[2px] flex overflow-hidden text-sm font-medium text-gray-900 rounded group bg-gradient-to-br from-zinc-500 to-blue-600 group-hover:from-zinc-400 group-hover:to-blue-600 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-zinc-200 dark:focus:ring-zinc-800">
                                        <span
                                            class="relative p-1 px-4 h-full flex items-center justify-center transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-sm group-hover:bg-opacity-0">
                                            Editar Entidade
                                        </span>
                                    </button>

                                    <button @onclick="() => deleteDoacoes(item)"
                                        class="relative items-center drop-shadow-md justify-center p-[2px] flex overflow-hidden text-sm font-medium text-gray-900 rounded group bg-gradient-to-br from-zinc-500 to-red-600 group-hover:from-zinc-400 group-hover:to-red-600 hover:text-white dark:text-white focus:ring-4 focus:outline-none focus:ring-zinc-200 dark:focus:ring-zinc-800">
                                        <span
                                            class="relative p-1 px-4 h-full flex items-center justify-center transition-all ease-in duration-75 bg-white dark:bg-gray-900 rounded-sm group-hover:bg-opacity-0">
                                            Excluir Entidade
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
    </div>

    <div id="new-doacao-modal" tabindex="-1" aria-hidden="true" data-modal-backdrop="static"
        class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
        <div class="relative p-4 w-full max-w-md max-h-full">
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                    @if (isUpdate)
                    {
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                            Editar Doação
                        </h3>
                    }
                    else
                    {
                        <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                            Cadastrar Doação
                        </h3>
                    }

                    <button type="button" @onclick="clearEntityInputs"
                        class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        data-modal-hide="new-doacao-modal">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <div class="p-4 md:p-5 transition-all">
                    <!-- Breadcrumb -->
                    <nav class="flex px-5 py-3 mb-5 text-gray-700 justify-center transition-all border border-gray-200 rounded-lg bg-gray-50 dark:bg-gray-800 dark:border-gray-700"
                        aria-label="Breadcrumb">
                        <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
                            <li class="inline-flex items-center cursor-pointer transition-all" id="enity-form"
                                @onclick="setEntityForm">
                                <div class="flex items-center">
                                    <span
                                        class="ms-1 text-sm font-medium text-gray-700 select-none hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white"
                                        style="@styleEntityTextNav">Entidades</span>
                                </div>
                            </li>
                            <li class="inline-flex items-center cursor-pointer transition-all" id="items-form"
                                @onclick="setItemsForm">
                                <div class="flex items-center cursor-pointer">
                                    <svg class="rtl:rotate-180 block w-3 h-3 mx-1 text-gray-400 " aria-hidden="true"
                                        xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
                                            stroke-width="2" d="m1 9 4-4-4-4" />
                                    </svg>
                                    <span
                                        class="ms-1 text-sm font-medium text-gray-700 select-none hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white"
                                        style="@styleItemsTextNav">Items</span>
                                </div>
                            </li>
                        </ol>
                    </nav>

                    <form class="space-y-4 transition-all" @onsubmit="SaveOrUpdateDoacoes">
                        <div class="space-y-4 hidden" style="@styleEntityForm">
                            <span class="text-md font-normal text-gray-500">Selecione as entidades e a campanha
                                responsável pela
                                doação.</span>

                            <div>
                                <label for="doadora"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                    Entidade doadora
                                </label>
                                <label class="block mb-2 text-xs text-gray-500">
                                    Entidade responsável por <strong>realizar</strong> a doação.
                                </label>
                                <select @bind="doacaoCrud.IdEntidadeDoadorFk" id="doadora"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
                                    <option value="">Selecione a entidade doadora</option>
                                    @if (entities != null)
                                    {
                                        @foreach (var entidade in entities)
                                        {
                                            @if (entidade.IsPessoaFisica)
                                            {
                                                <option value="@entidade.Id">@entidade.Nome</option>
                                            }
                                            else
                                            {
                                                <option value="@entidade.Id">@entidade.NomeFantasia</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>

                            <div>
                                <label for="receptora"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                    Entidade receptora
                                </label>
                                <label class="block mb-2 text-xs text-gray-500">
                                    Entidade responsável por <strong>receber</strong> a doação.
                                </label>
                                <select @bind="doacaoCrud.IdEntidadeRecebedorFk" id="receptora"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
                                    <option value="">Selecione a entidade receptora</option>
                                    @if (entities != null)
                                    {
                                        @foreach (var entidade in entities)
                                        {
                                            @if (entidade.IsPessoaFisica)
                                            {
                                                <option value="@entidade.Id">@entidade.Nome</option>
                                            }
                                            else
                                            {
                                                <option value="@entidade.Id">@entidade.NomeFantasia</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>

                            <div>
                                <label for="doadora"
                                    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                    Campanha
                                </label>
                                <select @bind="doacaoCrud.IdCampanhaDoacaoFk" id="receptora"
                                    class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white">
                                    <option value="">Selecione a campanha</option>
                                    @if (entities != null)
                                    {
                                        @foreach (var campanha in campanhas)
                                        {

                                            <option value="@campanha.Id">@campanha.Nome</option>

                                        }
                                    }
                                </select>
                            </div>

                            <button type="button" @onclick="setItemsForm"
                                class="w-full flex flex-row justify-center items-center gap-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                <span>Cadastrar Items</span>
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                                    fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                    stroke-linejoin="round" class="lucide lucide-arrow-big-right-dash">
                                    <path d="M5 9v6" />
                                    <path d="M9 9h3V5l7 7-7 7v-4H9V9z" />
                                </svg>
                            </button>
                        </div>

                        <div class="space-y-4 hidden" style="@styleItemsForm">
                            <span class="text-md font-normal text-gray-500">Cadastre os items que serão doados.</span>


                            <div class="flex flex-col gap-4">
                                <div class="grid grid-cols-[100px_1fr_75px] gap-2 justify-center items-center">
                                    <div>
                                        <label for="name-item"
                                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                            Nome
                                        </label>
                                        <input name="name-item" id="name-item" @bind="item.Nome"
                                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                                            placeholder="Nome..." required />
                                    </div>

                                    <div>
                                        <label for="description-item"
                                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                            Descrição
                                        </label>
                                        <input name="description-item" id="description-item" @bind="item.Descricao"
                                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                                            placeholder="Descrição..." required />
                                    </div>


                                    <div>
                                        <label for="quant-item"
                                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
                                            Qtd.
                                        </label>
                                        <input name="quant-item" id="quant-item" @bind="temporaryNumberItemDoacao"
                                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white"
                                            placeholder="Qtd..." type="number" required />
                                    </div>
                                </div>

                                <div class="flex flex-col gap-2">
                                    @{
                                        int i = 0;
                                    }
                                    @foreach (var items in itemsParaDoacao)
                                    {
                                        <div>
                                            <div class="flex flex-row gap-2 justify-between items-center">
                                                <div class="flex flex-row gap-2">
                                                    <span class="text-sm font-semibold">@items.Nome</span>
                                                    <span class="text-sm font-normal">@items.Descricao</span>
                                                </div>
                                                <span class="text-sm font-semibold">@itemDoacaoList[i].Quantidade</span>
                                            </div>
                                        </div>
                                        i++;
                                    }
                                </div>

                                <button type="button" @onclick="AddItem"
                                    class="w-full flex flex-row justify-center items-center gap-2 text-blue-700 bg-transparent hover:bg-zinc-300 border border-solid border-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                    <span>Adiconar Item</span>
                                </button>
                            </div>


                            <div class="w-full grid grid-cols-[100px_1fr] justify-center items-center gap-2">
                                <button type="button" @onclick="setEntityForm"
                                    class="w-full flex flex-row justify-center items-center gap-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                                    <span>Voltar</span>
                                </button>


                                <button type="submit" @onsubmit="SaveOrUpdateDoacoes"
                                    class="w-full flex flex-row justify-center items-center gap-2 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                                    data-modal-hide="new-doacao-modal">

                                    @if (isUpdate)
                                    {
                                        <span>Atualizar cadastro</span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                                            fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                            stroke-linejoin="round" class="lucide lucide-pencil">
                                            <path
                                                d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z" />
                                            <path d="m15 5 4 4" />
                                        </svg>
                                    }
                                    else
                                    {
                                        <span>Finalizar cadastro</span>
                                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24"
                                            fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round"
                                            stroke-linejoin="round" class="lucide lucide-save">
                                            <path
                                                d="M15.2 3a2 2 0 0 1 1.4.6l3.8 3.8a2 2 0 0 1 .6 1.4V19a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2z" />
                                            <path d="M17 21v-7a1 1 0 0 0-1-1H8a1 1 0 0 0-1 1v7" />
                                            <path d="M7 3v4a1 1 0 0 0 1 1h7" />
                                        </svg>
                                    }
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected override async Task OnAfterRenderAsync(bool isFirstRender)
    {
        if (isFirstRender)
        {
            await JS.InvokeVoidAsync("initFlowbite");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await getAllEntities();
        await getAllCampanhas();

        aTimer = new Timer(1000);
        aTimer.Elapsed += OnUserFinish;
        aTimer.AutoReset = false;
    }

    public string inputSearch { get; set; } = string.Empty;
    public string inputSearchBack { get; set; } = string.Empty;
    private Timer aTimer = default!;

    void ResetTimer(KeyboardEventArgs e)
    {
        aTimer.Stop();
        aTimer.Start();
        loadingEntities = true;
    }

    private async void OnUserFinish(Object? source, ElapsedEventArgs e)
    {

        inputSearchBack = await Task.FromResult(inputSearch);

        if (inputSearchBack == "")
        {
            entities = await Task.FromResult(await entidadeService.GetAllEntidades());
        }
        else
        {
            entities = entidadeService.GetPesquisaEntidade(inputSearchBack);
        }

        loadingEntities = false;

        await InvokeAsync(StateHasChanged);
    }

    void IDisposable.Dispose() => aTimer?.Dispose();

    @* DOACAO LOGIC *@

    private bool isUpdate = false;

    private Doacao doacaoCrud = new Doacao();
    private Entity entity = new Entity();
    private Item item = new Item();

    private int temporaryNumberItemDoacao = 0;

    private List<Entity> entities = new List<Entity>();
    private List<CampanhaDoacao> campanhas = new List<CampanhaDoacao>();
    private List<Item> itemsParaDoacao = new List<Item>();
    private List<ItemDoacao> itemDoacaoList = new List<ItemDoacao>();

    private string? styleEntityForm = "display: block;";
    private string? styleEntityTextNav = "font-weight: 800;";

    private string? styleItemsForm = null;
    private string? styleItemsTextNav = null;

    private async Task getAllEntities()
    {
        entities = [];

        entities = await entidadeService.GetAllEntidades();
    }

    private async Task getAllCampanhas()
    {
        campanhas = [];

        campanhas = await campanhaService.GetAllCampanhas();

        var entidades = await entidadeService.GetAllEntidades();

        foreach (var campanha in campanhas)
        {
            campanha.Criador = entidades.FirstOrDefault(e => e.Id == campanha.IdCriadorFk);
        }
    }

    private void setEntityForm()
    {
        styleEntityForm = "display: block;";
        styleItemsForm = null;

        styleEntityTextNav = "font-weight: 800;";
        styleItemsTextNav = null;
    }

    private void setItemsForm()
    {
        styleEntityForm = null;
        styleItemsForm = "display: block;";

        styleEntityTextNav = null;
        styleItemsTextNav = "font-weight: 800;";
    }

    private void AddItem()
    {
        if (string.IsNullOrEmpty(item.Nome))
        {
            return;
        }

        itemsParaDoacao.Add(item);

        itemDoacaoList.Add(new ItemDoacao()
            {
                Id = null,
                Doacao = null,
                IdDoacaoFk = null,
                IdItemFk = item.Id,
                Item = null,
                Quantidade = temporaryNumberItemDoacao
            });


        item = new Item();
        temporaryNumberItemDoacao = 0;
    }
    private bool loadingEntities = false;

    private void openModalUpdateDoacoes(Entity entityUpdate)
    {
        isUpdate = true;
    }

    private async Task SaveOrUpdateDoacoes()
    {
        await getAllEntities();
        await getAllCampanhas();
        clearEntityInputs();
        await InvokeAsync(StateHasChanged);
    }

    private async Task deleteDoacoes(Entity entity)
    {
        await entidadeService.DeleteEntidade(entity.Id!.Value);
        await getAllEntities();
    }

    private async Task searchEntity(ChangeEventArgs e)
    {
    }

    private async Task filterByType(ChangeEventArgs e)
    {
    }

    private async Task filterByOrder(ChangeEventArgs e)
    {
    }

    private void clearEntityInputs()
    {
        styleEntityForm = "display: block;";
        styleEntityTextNav = "font-weight: 800;";

        styleItemsForm = null;
        styleItemsTextNav = null;

        isUpdate = false;

        Console.WriteLine("Clear" + isUpdate);
    }
}
